// For defining application-wide color variables
// Only variable and function definitions in this file, else you'll get many duplicate CSS rules

// Lights and shades, for shadows and highlights
$shade02: rgba(0,0,0,.02)
$shade05: rgba(0,0,0,.05)
$shade10: rgba(0,0,0,.1)
$shade15: rgba(0,0,0,.15)
$shade20: rgba(0,0,0,.2)
$shade40: rgba(0,0,0,.4)
$shade60: rgba(0,0,0,.6)
$shade80: rgba(0,0,0,.8)

$light10: rgba(255,255,255,0.1)
$light20: rgba(255,255,255,0.2)
$light40: rgba(255,255,255,0.4)
$light60: rgba(255,255,255,0.6)
$light80: rgba(255,255,255,0.8)
$light90: rgba(255,255,255,0.9)
$light95: rgba(255,255,255,0.95)

// Grays, for matching shadows and highlights without the compositing perf penatly of an alpha channel
$black02: mix(black, white,  2%)
$black05: mix(black, white,  5%)
$black10: mix(black, white, 10%)
$black15: mix(black, white, 15%)
$black20: mix(black, white, 20%)
$black40: mix(black, white, 40%)
$black60: mix(black, white, 60%)
$black80: mix(black, white, 80%)
$black90: mix(black, white, 90%)

$white02: mix(white, black,  2%)
$white05: mix(white, black,  5%)
$white10: mix(white, black, 10%)
$white15: mix(white, black, 15%)
$white20: mix(white, black, 20%)
$white40: mix(white, black, 40%)
$white60: mix(white, black, 60%)
$white80: mix(white, black, 80%)
$white90: mix(white, black, 90%)

// Pallete colors, for brand consistency and beauty
$green:   rgb(80,200,0)
$red:     #dd1c77
$blue:    #43a2ca
$orange:  #fe9929

// Semantic colors, for satisfying and flexible semantic use
$colorGood:     $green
$colorBad:      $red
$colorWarn:     $orange
$muted:         $black60
$veryMuted:     $black40

// Data colors, for sequential data color coding
// http://colorbrewer2.org/?type=sequential&scheme=PuRd&n=5
//$data10: #f1eef6
//$data30: #d7b5d8
//$data50: #df65b0
//$data70: #dd1c77
//$data90: #980043


